<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Geek Think</title>
    <link>http://xmruibi.github.io/</link>
    <description>Recent content on Geek Think</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>(c) 2015 Rui Bi.</copyright>
    <lastBuildDate>Tue, 24 Nov 2015 22:56:15 -0700</lastBuildDate>
    <atom:link href="http://xmruibi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Apache and PHP Configuration and some shell scripts</title>
      <link>http://xmruibi.github.io/code/Apache/</link>
      <pubDate>Tue, 24 Nov 2015 22:56:15 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/code/Apache/</guid>
      <description>

&lt;p&gt;This document is for the technical operations assignment. The assignment mainly target to achieve the apache httpd and PHP configuration on AWS. There are some bash scripts practices also required in this assignment.&lt;/p&gt;

&lt;h2 id=&#34;task-1:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 1:&lt;/h2&gt;

&lt;h3 id=&#34;install-apache-server-httpd-and-open-ssl:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Install Apache Server (httpd) and Open SSL:&lt;/h3&gt;

&lt;p&gt;Access AWS:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ssh root@ec2-54-145-34-67.compute-1.amazonaws.com 
# Enter your password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download Apache HTTPD&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd /home/root/

wget http://apache.osuosl.org/httpd/httpd-2.2.31.tar.gz

mkdir apache-2.2

mv httpd-2.2.31.tar.gz apache-2.2

cd apache-2.2

tar -xzvf httpd-2.2.31.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download and install open ssl so that apache can achieve the https visiting&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget ftp://ftp.openssl.org/source/openssl-0.9.8zd.tar.gz

tar -zxvf openssl-0.9.8zd.tar.gz

# Please config with -fPIC otherwise it may takes error during httpd
./config -fPIC no-gost no-shared no-zlib

make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configuration-on-both-httpd-and-open-ssl-certificates:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Configuration on both HTTPD and Open SSL Certificates&lt;/h3&gt;

&lt;p&gt;Configure and install the HTTPD&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd /home/root/apache-2.2/httpd-2.2.31

# Configure Apache to be installed into your home directory
# Sometime it may show some errors like: `no acceptable C compiler found in $Path`
# Please check gcc package installed! 
# make agrs: --enable-so --enable-modules=all --enable-mods-shared=all so that it can dynamic load modules for SSL and php
./configure --prefix=/home/root/apache-2.2 --enable-so --enable-modules=all --enable-mods-shared=all --enable-ssl=shared --with-ssl=/usr/local/ssl 

make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate Open SSL Key and Certificates&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# enter the openssl directory
cd /usr/local/ssl/bin

#Generate private key   
openssl genrsa -out server.key 2048   

#Generate CSR Certificate Signing Request   
openssl req -new -key server.key -out server.csr  

#Generate Self Signed Certificate  
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt  

# Copy all generated certificates and keys into directory under apache
cp server.key   /home/root/apache-2.2/conf/
cp server.csr   /home/root/apache-2.2/conf/
cp server.crt   /home/root/apache-2.2/conf/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure the ssl.conf for httpd&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nano /home/root/apache-2.2/conf/extra/httpd-ssl.conf

# Modify following 
SSLCertificateFile conf/server.key            # configure the certificate of server
SSLCertificateKeyFile conf/server.csr        # configure the private key 
#SSLCertificateChainFile conf/server.crt     # remove&#39;#&#39;

# Configure the httpd.conf - the global httpd configuration file
nano /home/root/apache-2.2/conf/httpd.conf

# Configure Apache to listen on both port 81 AND 82 simultaneously
# Listen 81 # remove&#39;#&#39;
# Listen 82 # remove&#39;#&#39;
# Include conf/extra/httpd-ssl.conf #remove&#39;#&#39;

# Check the configuration and run the apache server
cd /home/root/apache-2.2/bin
./apachectl configtest
./apachectl -k start

# Verify that Apache is listening on both port 81 AND 82 AND HTTPS/443
curl http://localhost:81
# It will show this:
&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;It works!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
curl http://localhost:82
curl --cacert &amp;quot;/usr/local/ssl/bin/server.crt&amp;quot; https://localhost
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;task-2:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 2:&lt;/h2&gt;

&lt;h3 id=&#34;get-php-installed:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Get PHP installed&lt;/h3&gt;

&lt;p&gt;The prerequisite (libxml2) for php install&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir php
cd php

wget http://xmlsoft.org/sources/libxml2-2.9.1.tar.gz
tar zxvf libxml2-2.9.1.tar.gz 
 cd libxml2-2.9.1.
 # --with-python=no for sometime the error occured when install
  ./configure --prefix=/usr/local/libxml2 --with-python=no
 make
 # make clean  # when some error occur
 make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install and Configuration on PHP&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;wget  http://us2.php.net/get/php-5.4.45.tar.gz/from/this/mirror
tar zxvf php-5.4.45
cd php-5.4.45

# Configure php install with pointing the root path of httpd and php and also the libxml2
./configure --with-apxs2=/home/root/apache-2.2/bin/apxs --prefix=/home/root/apache-2.2/php --with-config-file-path=/home/root/apache-2.2/php --with-libxml-dir=/usr/local/libxml2

# Move php.ini into the php path
cd /home/root/php/php-5.4.45
mv php.ini-development php.ini.dist
cp php.ini.dist /home/root/apache-2.2/php/bin/php.ini 


# Add the following two lines in httpd.conf
AddType application/x-httpd-php .php 
AddType application/x-httpd-php-source .phps   

# Make sure you have this line in httpd.conf
LoadModule php5_module        modules/libphp5.so

cd /home/root/apache-2.2/bin
./apachectl stop
./apachectl start
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;write-and-test-following-into-helloworld-php:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Write and Test following into &amp;lsquo;helloworld.php&amp;rsquo;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nano /home/root/apache-2.2/htdocs/helloworld.php

# Write down following into helloworld.php
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;PHP Test&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;?php echo &#39;&amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt;&#39;; ?&amp;gt; 
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

# Test
curl localhost:81/helloworld.php

#Output
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;PHP Test&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;p&amp;gt;Hello World&amp;lt;/p&amp;gt; 
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;task-3:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 3:&lt;/h2&gt;

&lt;h3 id=&#34;task-3a-prompt-for-your-name-and-print-it-out-by-write-following-script:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 3A: Prompt for your name and print it out by write following script:&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;name=&#39;Rui Bi&#39;
echo $name
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3b-print-out-the-current-date-five-times-with-a-minute-pause-between-each-print:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 3B: Print out the current date five times, with a minute pause between each print.&lt;/h3&gt;

&lt;p&gt;By write following script:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;for ((i=0;$i&amp;lt;5;i++))
 do
 date
 sleep 60
 done
echo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3c-count-the-number-of-processes-running-as-root:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 3C: Count the number of processes running as &amp;ldquo;&amp;ldquo;root&amp;rdquo;&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;By write following script:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;count=`ps -u root | wc  -l`
echo $count
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3d-every-minute-you-should-print-out-the-following:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 3D: Every minute, you should print out the following&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The total number of processes running as root.  If this is above 25, print out a warning message.&lt;/li&gt;
&lt;li&gt;The percentage of disk used.  If this is above 80%, print out a warning message.&lt;/li&gt;
&lt;li&gt;The amount of free memory, if this number gets below 100mb, print out a warning message.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;write-a-shell-script-systemmonitor-sh-which-is-storing-in-directory-home-root-as-following:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Write a shell script &lt;code&gt;SystemMonitor.sh&lt;/code&gt; which is storing in directory &lt;code&gt;/home/root/&lt;/code&gt;, as following:&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;psCnt=`ps -u root | wc  -l`
diskUsg=`df / | awk &#39;END{print $5}&#39; | cut -f 1 -d &amp;quot;%&amp;quot;`
freeMem=`free -m | grep Mem | awk &#39;{print $4}&#39;`
 
if (($psCnt &amp;gt; 25)); then
 echo &amp;quot;Warning: current process amount is &amp;quot;$psCnt
fi

if ((diskUsg &amp;gt; 80)); then
 echo &amp;quot;Warning: current disk Usage exceeded 80%&amp;quot;
fi

if (($freeMem &amp;lt; 100)); then
 echo &amp;quot;Warning: current free Memory less than 100MB&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;setup-crontab-by-following-command-and-output-the-result-in-home-root-monitor-output-file:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Setup &lt;code&gt;crontab&lt;/code&gt; by following command and output the result in &lt;code&gt;/home/root/monitor_output.file&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;crontab -e
*/1 * * * * /home/root/SystemMonitor.sh &amp;gt;&amp;gt; /home/root/monitor_output.file &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;task-3e-create-a-crontab-that-will-execute-every-5-minutes-that-will-log-the-last-4-ip-addresses-that-accessed-your-website:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Task 3E: Create a crontab that will execute every 5 minutes that will log the last 4 IP addresses that accessed your website.&lt;/h3&gt;

&lt;h4 id=&#34;for-this-task-we-have-to-check-the-httpd-access-log-which-is-located-in-home-root-apache-2-2-logs-access-log:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;For this task, we have to check the httpd access log which is located in &lt;code&gt;/home/root/apache-2.2/logs/access-log&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Here I use &lt;code&gt;cat&lt;/code&gt; command and output the result to the &lt;code&gt;/home/root/ip_output.file&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;write-a-shell-script-ip-monitor-sh:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Write a shell script &lt;code&gt;ip_monitor.sh&lt;/code&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo `date` &amp;gt;&amp;gt; /home/root/ip_output.file

# Get recent 4 ip access means the last 4 ip in access_log
cat /home/root/apache-2.2/logs/access_log |cut -d &#39; &#39; -f 1 | awk &#39;{print $0 }&#39; | tail -n 4 |less &amp;gt;&amp;gt; /home/root/ip_output.file

# for first 5 frequent visit use this:
# /home/root/apache-2.2/logs/access_log |cut -d &#39; &#39; -f 1 |sort |uniq -c | sort -nr | awk &#39;{print $0 }&#39; | head -n 5 |less
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;make-the-ip-access-log-monitor-as-a-crontab-task-with-every-5-minutes-run:46c96d68f9a2765d4e06c15f60cc3802&#34;&gt;Make the ip access log monitor as a &lt;code&gt;crontab&lt;/code&gt; task with every 5 minutes run.&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;crontab -e
*/5 * * * * /home/root/ip_monitor.sh
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find a Path in Maze</title>
      <link>http://xmruibi.github.io/2015/11/19/find-a-path-in-maze/</link>
      <pubDate>Thu, 19 Nov 2015 12:33:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/19/find-a-path-in-maze/</guid>
      <description>

&lt;p&gt;Find path in given 2D matrix. 3 states, &lt;code&gt;0&lt;/code&gt; means allow to go, &lt;code&gt;1&lt;/code&gt; means the obstacle, &lt;code&gt;9&lt;/code&gt; is the final, return true or false if the path exist from &lt;code&gt;(0,0)&lt;/code&gt; to any position contains &lt;code&gt;9&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;solution:6bea082703d3b73c0480d7f0afc663d2&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	/**
	 * DFS Implementation
	 * @param matrix as maze
	 * @param x start position
	 * @param y start position
	 * @return
	 */
	public static boolean findPath(int[][] matrix, int x, int y) {
		// output for edge cases
		if (matrix == null || matrix.length == 0 || matrix[0].length == 0
				|| matrix[x][y] == 1) {
			return false;
		}
		// the steps for x and y
		int[] sx = { 0, 0, -1, 1 };
		int[] sy = { 1, -1, 0, 0 };

		// if current position is &#39;9&#39;
		if (matrix[x][y] == 9)
			return true;
		// set current value to 1 avoid the duplicate visiting
		matrix[x][y] = 1;
		
		// dfs to try the path in matrix
		for (int i = 0; i &amp;lt; 4; i++) {
			int nx = x + sx[i];
			int ny = y + sy[i];
			if (nx &amp;gt;= 0 &amp;amp;&amp;amp; nx &amp;lt; matrix.length &amp;amp;&amp;amp; ny &amp;gt;= 0
					&amp;amp;&amp;amp; ny &amp;lt; matrix[nx].length &amp;amp;&amp;amp; matrix[nx][ny] != 1) {
				if (findPath(matrix, nx, ny))
					return true;
			}
		}
		return false;
	}

	/**
	 * BFS Implementation
	 * @param matrix as maze
	 * @param x start position
	 * @param y start position
	 * @return
	 */
	public static boolean findPathII(int[][] matrix, int x, int y) {
		if (matrix == null || matrix.length == 0 || matrix[0].length == 0
				|| matrix[x][y] == 1) {
			return false;
		}
		// the steps for x and y
		int[] sx = { 0, 0, -1, 1 };
		int[] sy = { 1, -1, 0, 0 };

		// setup a queue to do the bfs
		Queue&amp;lt;int[]&amp;gt; queue = new LinkedList&amp;lt;&amp;gt;();
		queue.offer(new int[] { x, y });
		matrix[x][y] = 1;
		while (!queue.isEmpty()) {
			int[] cur = queue.poll();
			if (matrix[cur[0]][cur[1]] == 9) 
				return true;
			
			matrix[cur[0]][cur[1]] = 1;
			for (int i = 0; i &amp;lt; 4; i++) {
				int nx = cur[0] + sx[i];
				int ny = cur[1] + sy[i];
				if (nx &amp;gt;= 0 &amp;amp;&amp;amp; nx &amp;lt; matrix.length &amp;amp;&amp;amp; ny &amp;gt;= 0
						&amp;amp;&amp;amp; ny &amp;lt; matrix[nx].length &amp;amp;&amp;amp; matrix[nx][ny] != 1) {
					queue.offer(new int[] { nx, ny });
					matrix[nx][ny] = 1;
				}
			}
		}
		return false;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;time-complexity:6bea082703d3b73c0480d7f0afc663d2&#34;&gt;Time Complexity&lt;/h2&gt;

&lt;p&gt;For DFS, it takes much space $O(m * n)$ since the recursion stack,  while the time complexity is $O(m * n)$. More specifically, the space complexity depends on the maze type and the step direction order.&lt;/p&gt;

&lt;p&gt;For BFS, it take less space, since every time the queue only store the valid neighbors according to current layer for a certain node. In matrix, the maximum layer size is the valid node number in diagonal. So the complexity is $O(\sqrt{n^2 + m^2})$. But the time complexity is the same as DFS with $O(m * n)$.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find Minimum Value Sum of Path</title>
      <link>http://xmruibi.github.io/2015/11/19/find-minimum-value-sum-of-path/</link>
      <pubDate>Thu, 19 Nov 2015 10:23:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/19/find-minimum-value-sum-of-path/</guid>
      <description>

&lt;p&gt;Given a binary tree, find a path has the minimum sum of node value.&lt;/p&gt;

&lt;h2 id=&#34;solution:daf05f69a964957806f1dbf44b1f6175&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public static int minPath(TreeNode root) {
		if (root == null)
			return 0;
		if (root.left == null &amp;amp;&amp;amp; root.right == null)
			return root.val;
		if (root.left == null)
			return root.val + minPath(root.right);
		if (root.right == null)
			return root.val + minPath(root.left);
		return root.val + Math.min(minPath(root.left), minPath(root.right));
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Arithmetic Sequence</title>
      <link>http://xmruibi.github.io/2015/11/18/arithmetic-sequence/</link>
      <pubDate>Wed, 18 Nov 2015 13:43:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/18/arithmetic-sequence/</guid>
      <description>

&lt;p&gt;A sequence of numbers is called &lt;em&gt;Arithmetic&lt;/em&gt; if it consists of at least three elements and if the difference between any two consecutive elements is the same. For example, &lt;code&gt;[1,3,5,7,9]&lt;/code&gt;, &lt;code&gt;[7,7,7,7,7]&lt;/code&gt; and &lt;code&gt;[3,-1,-5,-9]&lt;/code&gt; are arithmetic.&lt;/p&gt;

&lt;p&gt;A slice (P, Q) of Array A is called arithmetic if the sequence:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	A[P], A[P+1], ..., A[Q-1],A[Q]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is arthmetic. In particular, this means that &lt;code&gt;P+1 &amp;lt; Q&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Write a function: &lt;code&gt;class Solution { public int solution(int[] A);}&lt;/code&gt; that, given array &lt;code&gt;A&lt;/code&gt; consisting of &lt;code&gt;N&lt;/code&gt; numbers, returns the number of arithmetic slices in &lt;code&gt;A&lt;/code&gt;. The function should return &lt;code&gt;-1&lt;/code&gt; if the result exceeds 1,000,000,000.&lt;/p&gt;

&lt;h3 id=&#34;example:fe4862e12cf7144de624f77907b24b10&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;A[0] = -1, A[1] = 1, A[2] = 3, A[3] = 3, A[4] = 3, A[5] = 2, A[6] = 1, A[7] = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It should return &lt;code&gt;5&lt;/code&gt; since there are five arithmetic slices of that array, namely:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{0, 2}, {2, 4}, {4, 6}, {4, 7}, {5, 7}
``


## Solution
```java
public class Solution{
	public int countArithmetic(int[] array) {
		if(array.length &amp;lt; 3) 
			return 0;
		int total = 0;
		int idx = 1;
		while(idx &amp;lt; array.length) {
			int curSlice = 2;
			int diff = array[idx] - array[idx-1];
			// if the difference between two consecutive numbers is the same
			while(++idx &amp;lt; array.length &amp;amp;&amp;amp; array[idx] - array[idx-1] == diff) {
				curSlice++;
			}

			if(curSlice &amp;gt;= 3) {
				// when slice length = 3 -&amp;gt; count 1, = 4 -&amp;gt; 1*2, = 5 -&amp;gt; 1*2*3...
				total += ((curSlice - 2) * (curSlice - 1) / 2);
			}
		}
		return (total &amp;gt; 1000000000) ? -1 :total;
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Two Sum Count</title>
      <link>http://xmruibi.github.io/2015/11/18/two-sum-count/</link>
      <pubDate>Wed, 18 Nov 2015 12:43:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/18/two-sum-count/</guid>
      <description>

&lt;p&gt;Given an array and a target number, count how many pair in this array can sum to that target number.&lt;/p&gt;

&lt;h2 id=&#34;solution:4e4f31a8a2c131093d3fe5e1265a3ff0&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
	public int countTwoSum(int[] arr, int tar) {
		if(arr == null || arr.length == 0)
			return 0;
		int cnt = 0;
		// store all number in this array
		HashSet&amp;lt;Integer&amp;gt; set = new HashSet&amp;lt;&amp;gt;();
		for(int i = 0; i &amp;lt; arr.length; i++) {
			// if any number hit in hashset, that means a pair can sum to the target number
			if(set.contains(tar - arr[i]))
				cnt ++;
			set.add(arr[i]);
		}
		return cnt;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;solution-if-input-integers-has-duplicate:4e4f31a8a2c131093d3fe5e1265a3ff0&#34;&gt;Solution #If input integers has duplicate&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution {
    public static int TwoSumCount(int[] nums, int target) {
        if (nums == null || nums.length &amp;lt; 2)    return 0;
        Map&amp;lt;Integer, Integer&amp;gt; map = new HashMap&amp;lt;Integer, Integer&amp;gt;();
        int count = 0;
        for (int i = 0; i &amp;lt; nums.length; i++) {
            if (map.containsKey(target - nums[i]))
                count += map.get(target - nums[i]);
            map.put(nums[i], map.containsKey(nums[i]) ? map.get(nums[i]) + 1 : 1);
        }
        return count;
    }
    
    public static void main(String[] args) {
        int rvalue = TwoSumCount(new int[] {1, 1, 2, 3, 4}, 5);
        System.out.println(rvalue);
        return;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find Loops in Linked List</title>
      <link>http://xmruibi.github.io/2015/11/18/find-loops-in-linked-list/</link>
      <pubDate>Wed, 18 Nov 2015 12:43:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/18/find-loops-in-linked-list/</guid>
      <description>

&lt;p&gt;Given a linked list, find if it has a loop inside and return the loop beginning if it has the loop&lt;/p&gt;

&lt;h2 id=&#34;solution:a840d91244dfb46c7b1bf7358d4fa1d5&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
    public boolean findLoop(ListNode root) {
        if(root == null || root.next == null)
            return false;
        ListNode runner = root;
        ListNode walker = root;
        while(runner != null &amp;amp;&amp;amp; runner.next != null) {
            runner = runner.next.next;
            walker = walker.next;
            if(runner == walker)
                return true;
        }
        return false;
    }

    public ListNode findLoopEntry(ListNode root){
        if(root == null || root.next == null)
            return root;
        ListNode runner = root;
        ListNode walker = root;
        while(runner != null &amp;amp;&amp;amp; runner.next != null) {
            runner = runner.next.next;
            walker = walker.next;
            if(runner == walker)
                break;
        }
        if(runner == null || runner.next == null)
            return null;
        walker = root;
        while(walker != runner) {
            walker = walker.next;
            runner = runner.next;
        }
        return walker;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Compact Tree Builder</title>
      <link>http://xmruibi.github.io/2015/11/15/compact-tree-builder/</link>
      <pubDate>Sun, 15 Nov 2015 20:33:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/compact-tree-builder/</guid>
      <description>

&lt;p&gt;Given a root of a binary tree. Transform it in a way that each node(except probably one) would either have N or 0 children.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   * A               A                 A                         A
     *  |               |                 |_B                       |_B
     *  |_B             |_B                  |_C                    |
     *     |            |  |                    |_D                 |_C
     *     |            |  |_D                     |_E              |
     *     |            |  |                          |_F           |_D
     *     |_C          |  |_E                           |_G        |
     *     | |_D        |    |_H                            |_H     |_E
     *     |    |_F     |                                           |
     *     |            |_C                                         |_F
     *     |_E            |                                         |
     *       |_G          |_F                                       |_G
     *       |            |                                         |
     *       |_H          |_G                                       |_H
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;think:397f4eeb84727cbe660f274d6bea7a6c&#34;&gt;Think&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;BFS entire tree into a queue.&lt;/li&gt;
&lt;li&gt;Read that queue and build posssible children according to the limit and add it into the root.&lt;/li&gt;
&lt;li&gt;Record the next root in another queue.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution:397f4eeb84727cbe660f274d6bea7a6c&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;	private static CTree compact(TreeNode node, int limit) {

		// bfs the original tree into a queue
		List&amp;lt;TreeNode&amp;gt; queue = new LinkedList&amp;lt;&amp;gt;();
		queue.add(node);
		int idx = 0;
		while (idx &amp;lt; queue.size()) {
			TreeNode cur = queue.get(idx++);
			if (cur.left != null)
				queue.add(cur.left);
			if (cur.right != null)
				queue.add(cur.right);
		}
		// get the root for final return
		CTree root = new CTree(queue.remove(0).val);
		// build a queue for store the new type tree
		Queue&amp;lt;CTree&amp;gt; helperQueue = new LinkedList&amp;lt;&amp;gt;();
		helperQueue.add(root);
		while (!queue.isEmpty()) {
			CTree cRoot = helperQueue.remove();
			// build the children for current CTree
			int curLv = 0; // make sure the amount of children
			List&amp;lt;CTree&amp;gt; nexlv = new ArrayList&amp;lt;&amp;gt;();
			while (curLv &amp;lt; limit &amp;amp;&amp;amp; !queue.isEmpty()) {
				nexlv.add(new CTree(queue.remove(0).val));
				helperQueue.offer(nexlv.get(curLv++));
			}			
			cRoot.nodes = nexlv;
		}	
		return root;
	}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Convert BST to Sorted Doubly-Linked List</title>
      <link>http://xmruibi.github.io/2015/11/15/convert-bst-to-sorted-doubly-linked-list/</link>
      <pubDate>Sun, 15 Nov 2015 17:10:29 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/convert-bst-to-sorted-doubly-linked-list/</guid>
      <description>

&lt;p&gt;Given a Binary Tree (BT), convert it to a Doubly Linked List(DLL) In-Place. The left and right pointers in nodes are to be used as previous and next pointers respectively in converted DLL. The order of nodes in DLL must be same as Inorder of the given Binary Tree. The first node of Inorder traversal (left most node in BT) must be head node of the DLL.&lt;/p&gt;

&lt;h2 id=&#34;think:9391617169eedec55b65d518b5c0a515&#34;&gt;Think&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Inorder traversal&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution-stack:9391617169eedec55b65d518b5c0a515&#34;&gt;Solution #Stack&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;	private static Node convertBST2DoublyLinkedList(Node root) {
		Node dummy = new Node(0);
		Node prev = dummy;
		java.util.Stack&amp;lt;Node&amp;gt; stack = new java.util.Stack&amp;lt;&amp;gt;();

		do {
			while (root != null) {
				stack.push(root);
				root = root.prev;
			}
			Node cur = stack.pop();
			prev.next = cur;
			cur.prev = prev;
			prev = prev.next;
			if (cur.next != null)
				root = cur.next;
			else
				root = null;
		} while (!stack.isEmpty() || root != null);

		return dummy.next;
	}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;solution-recursion:9391617169eedec55b65d518b5c0a515&#34;&gt;Solution #Recursion&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Solution{
    static Node dummy = new Node(0);
    static Node pre = dummy;

    private static Node convertII(Node root) {
        if (root == null)
            return root;
        Node prev = convertII(root.prev);
        pre.next = root;
        root.prev = pre;
        pre = root;
        Node next = convertII(root.next);
        return root;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Longest Palindromic Subsequence</title>
      <link>http://xmruibi.github.io/2015/11/15/longest-palindromic-subsequence/</link>
      <pubDate>Sun, 15 Nov 2015 14:43:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/longest-palindromic-subsequence/</guid>
      <description>

&lt;p&gt;Given a sequence, find the length of the longest palindromic subsequence in it. For example, if the given sequence is &lt;code&gt;“BBABCBCAB”&lt;/code&gt;, then the output should be 7 as &lt;code&gt;“BABCBAB”&lt;/code&gt; is the longest palindromic subseuqnce in it. &lt;code&gt;“BBBBB”&lt;/code&gt; and &lt;code&gt;“BBCBB”&lt;/code&gt; are also palindromic subsequences of the given sequence, but not the longest ones.&lt;/p&gt;

&lt;h2 id=&#34;solution-dynamic-programming:0dddaebd549f2b96d7e1c402abcf8d05&#34;&gt;Solution #Dynamic Programming&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private static int longestSubsequence(String str) {
		// memo[len][i] represent from index &#39;i&#39; with length &#39;len&#39; has how many
		// palindromic subsequence
		int[][] memo = new int[str.length() + 1][str.length() + 1];

		// initial len with 1 as 1, since for every index it has 1 len
		// palindromic subsequence
		for (int i = 0; i &amp;lt; str.length(); i++)
			memo[1][i] = 1;

		// iterate the str with different length setting
		for (int len = 2; len &amp;lt;= str.length(); len++) {
			for (int i = 0; i &amp;lt;= str.length() - len; i++) {
				int tar = i + len - 1;
				if (len == 2 &amp;amp;&amp;amp; str.charAt(i) == str.charAt(tar))
					memo[len][i] = 2;
				else if (str.charAt(i) == str.charAt(tar))
					memo[len][i] = 2 + memo[len - 2][i + 1];
				else
					memo[len][i] = Math.max(memo[len - 1][i],
							memo[len - 1][i + 1]);
			}
		}
		return memo[str.length()][0];
	}

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;solution-recursive:0dddaebd549f2b96d7e1c402abcf8d05&#34;&gt;Solution # Recursive&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    public int calculateRecursive(char str[],int start,int len){
        if(len == 1){
            return 1;
        }
        if(len ==0){
            return 0;
        }
        if(str[start] == str[start+len-1]){
            return 2 + calculateRecursive(str,start+1,len-2);
        }else{
            return Math.max(calculateRecursive(str, start+1, len-1), calculateRecursive(str, start, len-1));
        }
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Pow() and Sqrt()</title>
      <link>http://xmruibi.github.io/2015/11/15/pow-and-sqrt/</link>
      <pubDate>Sun, 15 Nov 2015 13:11:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/pow-and-sqrt/</guid>
      <description>

&lt;p&gt;Write function to get the power &lt;code&gt;n&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt; and the square root of &lt;code&gt;x&lt;/code&gt;;&lt;/p&gt;

&lt;h2 id=&#34;solution-pow:8f114c26f536717def87e4afa082746d&#34;&gt;Solution # Pow&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;	// basic  
	public float pow(float x, int n) {
	    if(n==0)
            return 1.0;
		if (n == 1)
			return x;
		if (n % 2 == 0)
			return pow(x, n / 2) * pow(x, n / 2);
		else
			return x * pow(x, n / 2) * pow(x, n / 2);
	}

	// improved
	public double pow(double x, int n) {
        if(n==0)
            return 1.0;
        boolean neg = false;
        if(n&amp;lt;0)
            neg = true;
        double res = 1.0;
        while(n != 0){
            if(n%2 != 0){
                res *= x;
            }
            x *= x;
            n /= 2;
        }
        return neg?1.0/res:res;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;solution-sqrt:8f114c26f536717def87e4afa082746d&#34;&gt;Solution # Sqrt&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    public float sqrt(float n) {
        float low = 0, high = n;
        float mid = low + (high - low) / 2;
        while (Math.abs(mid * mid - n) &amp;gt; 0.00001) {
            if (mid * mid &amp;lt; n)
                low = mid;
            else if (mid * mid &amp;gt; n)
                high = mid;
            mid = low + (high - low) / 2;
        }
        return mid;
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Max Points on a Line</title>
      <link>http://xmruibi.github.io/2015/11/15/max-points-on-a-line/</link>
      <pubDate>Sun, 15 Nov 2015 12:43:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/max-points-on-a-line/</guid>
      <description>

&lt;p&gt;Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.&lt;/p&gt;

&lt;h2 id=&#34;think:0468874f3f0719bf48609e7d9f0fd5fc&#34;&gt;Think&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Represent line by ratio. Compare point to point by a nested two loop.&lt;/li&gt;
&lt;li&gt;Think about four cases:

&lt;ul&gt;
&lt;li&gt;Same point, count the same point amount&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; axis are the same&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt; axis are the same&lt;/li&gt;
&lt;li&gt;normal case &lt;code&gt;(y1 - y2)/(x1 - x2)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution:0468874f3f0719bf48609e7d9f0fd5fc&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MaxPointOnAline {

    public int getMaxLine(List&amp;lt;FloatPoint&amp;gt; points) {
        if (points == null || points.size() == 0)
            return 0;

        int max = 0;
        for (int i = 0; i &amp;lt; points.size(); i++) {
            FloatPoint cur = points.get(i);
            Map&amp;lt;Double, Integer&amp;gt; map = new HashMap&amp;lt;&amp;gt;();
            int same = 0, localMax = 1;
            for (int j = i + 1; j &amp;lt; points.size(); j++) {
                FloatPoint tar = points.get(j);
                if (cur.x == tar.x &amp;amp;&amp;amp; cur.y == tar.y) {
                    same++;
                }else if (cur.x == tar.x) {
                    double maxr = Double.MAX_VALUE;
                    map.put(maxr, map.containsKey(maxr) ? map.get(maxr) + 1 : 2);
                } else if (cur.y == tar.y) {
                    map.put(0.0, map.containsKey(0.0) ? map.get(0.0) + 1 : 2);
                } else {
                    double ratio = (cur.y - tar.y) / (cur.x - tar.x);
                    map.put(ratio, map.containsKey(ratio) ? map.get(ratio) + 1
                            : 2);
                }
            }
            for (Map.Entry&amp;lt;Double, Integer&amp;gt; entry : map.entrySet())
                localMax = Math.max(localMax, entry.getValue());
            max = Math.max(localMax + same, max);
        }
        return max;
    }
}

class FloatPoint {
    float x, y; // float may not suitable for accurate computation

    public FloatPoint(int x, int y) {
        this.x = x;
        this.y = y;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Max Stack</title>
      <link>http://xmruibi.github.io/2015/11/15/max-stack/</link>
      <pubDate>Sun, 15 Nov 2015 10:43:13 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/max-stack/</guid>
      <description>

&lt;p&gt;Design a stack, which makes the following function, try to reduce the time compaxity less than &lt;code&gt;O(n)&lt;/code&gt;
- &lt;code&gt;pop()&lt;/code&gt; pop the top of stack
- &lt;code&gt;push()&lt;/code&gt; push a element into stack
- &lt;code&gt;peek()&lt;/code&gt; peek the top of stack
- &lt;code&gt;peekMax()&lt;/code&gt; peek the max element of stack
- &lt;code&gt;popMax()&lt;/code&gt; pop the max element of stack&lt;/p&gt;

&lt;h2 id=&#34;think:0c76a512774b6e4792fd578d8968c8bd&#34;&gt;Think&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Typically, we can think about using one stacks and one heap. One of value, one of tracking the max stack.&lt;/li&gt;
&lt;li&gt;The most tricky part is pop max function. Make the node removal in O(n) should use the doubly linked list.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution:0c76a512774b6e4792fd578d8968c8bd&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MaxStack {
    Stack elem = new Stack();
    PriorityQueue&amp;lt;ListNode&amp;gt; heap = new PriorityQueue&amp;lt;ListNode&amp;gt;((o1,o2) -&amp;gt; Integer.compare(o2.val, o1.val));
    
    // take O(logn): the depth of heap tree 
    public void push(int val) {
        ListNode newnode = new ListNode(val);
        heap.add(newnode); 
        elem.push(newnode);
    }
    
    // take O(logn): the depth of heap tree 
    public void pop() {
        ListNode remove = elem.pop();
        heap.remove(remove); 
    }
    
    // O(1) time
    public int peek() {
        return elem.peek().val;
    }

    // O(1) time
    public int peekMax() {
        return heap.peek().val; 
    }

    // take O(logn): the depth of heap tree 
    public void popMax() {
        ListNode node = heap.poll(); 
        elem.remove(node);
    }

    public static void main(String[] args) {
        MaxStack ms = new MaxStack();
        ms.push(1);
        ms.push(3);
        ms.push(2);
        System.out.println(ms.peekMax()); // == 3
        ms.popMax();
        System.out.println(ms.peekMax()); // == 2
        ms.push(4);
        ms.push(8);
        ms.pop();
        System.out.println(ms.peekMax()); // == 4
    }
}

class Stack {
    ListNode head, rear;

    public Stack() {
        head = new ListNode(0);
        rear = new ListNode(0);
        head.next = rear;
        rear.prev = head;
    }

    public void push(ListNode newnode) {
        rear.prev.next = newnode;
        newnode.prev = rear.prev;
        newnode.next = rear;
        rear.prev = newnode;
    }

    public ListNode pop() {
        if (isEmpty())
            return null;
        ListNode remove = rear.prev;
        rear.prev = remove.prev;
        remove.prev.next = rear;
        return remove;
    }

    public ListNode peek() {
        if (isEmpty())
            return null;
        ListNode peek = rear.prev;
        return peek;
    }

    public void remove(ListNode node) {
        node.prev.next = node.next;
        node.next.prev = node.prev;
    }

    public boolean isEmpty() {
        return head.next == rear;
    }
}

class ListNode {
    int val;
    ListNode prev, next;

    public ListNode(int val) {
        this.val = val;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Iterator for Merging Sorted Stream</title>
      <link>http://xmruibi.github.io/2015/11/15/iterator-for-merging-sorted-stream/</link>
      <pubDate>Sun, 15 Nov 2015 10:10:29 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/iterator-for-merging-sorted-stream/</guid>
      <description>

&lt;p&gt;Design a iterator, with input a list and a hop parameter. Then output the element according to that hop number. List: &lt;code&gt;1, 2, 3, 4, 5, 6, 7, 8, 9; hop = 2&lt;/code&gt; -&amp;gt; &lt;code&gt;2, ,4, 6, 8&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;solution:c20097de2cc12809c8a9177ae4edd63e&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class HopIterator&amp;lt;E&amp;gt; implements Iterator&amp;lt;E&amp;gt; {
	int hop;
	Iterator&amp;lt;E&amp;gt; itr;

	public HopIterator(Collection&amp;lt;E&amp;gt; list, int hop) {
		this.itr = list.iterator();
		this.hop = hop;
	}

	@Override
	public boolean hasNext() {
		int k = 1;
		while (k &amp;lt; hop &amp;amp;&amp;amp; itr.hasNext()) {
			k++;
			itr.next();
		}
		return k == hop &amp;amp;&amp;amp; itr.hasNext();
	}

	@Override
	public E next() {
		return itr.next();
	}
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Iterator for Merging Sorted Stream</title>
      <link>http://xmruibi.github.io/2015/11/15/iterator-for-merging-sorted-stream/</link>
      <pubDate>Sun, 15 Nov 2015 10:10:29 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/iterator-for-merging-sorted-stream/</guid>
      <description>

&lt;p&gt;Given a &lt;code&gt;Merge Sorted Stream&lt;/code&gt; class contains some sorted stream which implements iterator interface. Each sorted stream class has some methods: &lt;code&gt;hasNext()&lt;/code&gt;, &lt;code&gt;next()&lt;/code&gt;. Sorted Stream defines the stream read data by ascending order, so that in &lt;code&gt;Merge Sorted Stream&lt;/code&gt; when call &lt;code&gt;next()&lt;/code&gt; method, it will return values by ascending order. Pleas complete the following codes.&lt;/p&gt;

&lt;h3 id=&#34;partital-code:29d87af7cc40b904c89fba965c56caf1&#34;&gt;Partital Code&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class SortedStream implments Iterator&amp;lt;Integer&amp;gt;{
	List&amp;lt;Integer&amp;gt; content;
	int cursor;
	public SortedStream(List&amp;lt;Integer&amp;gt; content){
		if(content == null)
			throw new IllegalArgumentException(&amp;quot;Null Input&amp;quot;);
		this.content = content;
		this.cursor = 0;
	}

	public boolean hasNext(){return cursor &amp;lt; content.size();}

	public int next(){return content.get(cursor++);}
}

class MergeSortedStream implments Iterator&amp;lt;SortedStream&amp;gt;{
    List&amp;lt;SortedStream&amp;gt; content;
	SortedStream cursor;
	public MergeSortedStream(List&amp;lt;SortedStream&amp;gt; content){...}
	
	public boolean hasNext(){...};

	public int next(){...};
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;think:29d87af7cc40b904c89fba965c56caf1&#34;&gt;Think&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Implement a new wrapper class for original iterator class and make it comparable.&lt;/li&gt;
&lt;li&gt;The new wrapper class is just like peek iterator, and implement &lt;code&gt;compareTo()&lt;/code&gt; method with comparing the peek element.&lt;/li&gt;
&lt;li&gt;Put all new iterator class in a minheap.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;solution:29d87af7cc40b904c89fba965c56caf1&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MergeKSortedIterator implements Iterable&amp;lt;Integer&amp;gt; {

    Collection&amp;lt;Iterator&amp;lt;Integer&amp;gt;&amp;gt; listOfItr;

    public MergeKSortedIterator(Collection&amp;lt;Iterator&amp;lt;Integer&amp;gt;&amp;gt; lists) {
        this.listOfItr = lists;
    }

    @Override
    public Iterator&amp;lt;Integer&amp;gt; iterator() {
        Queue&amp;lt;NewIterator&amp;gt; minHeap = new PriorityQueue&amp;lt;NewIterator&amp;gt;(
                listOfItr.size());
        for (Iterator&amp;lt;Integer&amp;gt; it : listOfItr)
            minHeap.add(new NewIterator(it));

        return new Iterator&amp;lt;Integer&amp;gt;() {
            @Override
            public boolean hasNext() {
                return !minHeap.isEmpty();
            }

            @Override
            public Integer next() {
                NewIterator pop = minHeap.poll();
                int res = pop.next();
                if (pop.hasNext()) {
                    minHeap.add(pop);
                }
                return res;
            }

        };
    }

    class NewIterator implements Comparable&amp;lt;NewIterator&amp;gt;, Iterator&amp;lt;Integer&amp;gt; {
        Integer cur;
        Iterator&amp;lt;Integer&amp;gt; itr;

        public NewIterator(Iterator&amp;lt;Integer&amp;gt; itr) {
            this.itr = itr;
            cur = itr.hasNext() ? itr.next() : null;
        }

        @Override
        public int compareTo(NewIterator o) {
            return Integer.compare(this.peek(), o.peek());
        }

        @Override
        public boolean hasNext() {
            return cur != null;
        }

        @Override
        public Integer next() {
            int res = cur;
            cur = itr.hasNext() ? itr.next() : null;
            return res;
        }

        public Integer peek() {
            return cur;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find Union and Intersection by Iterators</title>
      <link>http://xmruibi.github.io/2015/11/15/find-union-and-intersection-by-iterators/</link>
      <pubDate>Sun, 15 Nov 2015 10:10:29 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/2015/11/15/find-union-and-intersection-by-iterators/</guid>
      <description>

&lt;p&gt;Given two iterators, find their union and intersection.&lt;/p&gt;

&lt;h2 id=&#34;solution:d67777c39d54b3f8295734245ce89a09&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    private static List&amp;lt;Integer&amp;gt; union(Iterator&amp;lt;Integer&amp;gt; itr1,
            Iterator&amp;lt;Integer&amp;gt; itr2) {
        Integer num1 = itr1.hasNext() ? itr1.next() : null;
        Integer num2 = itr2.hasNext() ? itr2.next() : null;
        List&amp;lt;Integer&amp;gt; res = new ArrayList&amp;lt;&amp;gt;();
        while (num1 != null || num2 != null) {
            if (num1 != null &amp;amp;&amp;amp; num2 != null) {
                if (num1 &amp;lt; num2) {
                    res.add(num1);
                    num1 = itr1.hasNext() ? itr1.next() : null;
                } else if (num1 &amp;gt; num2) {
                    res.add(num2);
                    num2 = itr2.hasNext() ? itr2.next() : null;
                } else {
                    res.add(num1);
                    num1 = itr1.hasNext() ? itr1.next() : null;
                    num2 = itr2.hasNext() ? itr2.next() : null;
                }
            } else if (num1 != null) {
                res.add(num1);
                num1 = itr1.hasNext() ? itr1.next() : null;
            } else {
                res.add(num2);
                num2 = itr2.hasNext() ? itr2.next() : null;
            }
        }
        return res;
    }

    private static List&amp;lt;Integer&amp;gt; intersection(Iterator&amp;lt;Integer&amp;gt; itr1,
            Iterator&amp;lt;Integer&amp;gt; itr2) {
        Integer num1 = itr1.hasNext() ? itr1.next() : null;
        Integer num2 = itr2.hasNext() ? itr2.next() : null;
        List&amp;lt;Integer&amp;gt; res = new ArrayList&amp;lt;&amp;gt;();
        while (num1 != null &amp;amp;&amp;amp; num2 != null) {
            if (num1 &amp;lt; num2) {
                num1 = itr1.hasNext() ? itr1.next() : null;
            } else if (num1 &amp;gt; num2) {
                num2 = itr2.hasNext() ? itr2.next() : null;
            } else {
                res.add(num1);
                num1 = itr1.hasNext() ? itr1.next() : null;
                num2 = itr2.hasNext() ? itr2.next() : null;
            }
        }
        return res;
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>