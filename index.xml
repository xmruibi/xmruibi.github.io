<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rui&#39;s Site</title>
    <link>http://xmruibi.github.io/</link>
    <description>Recent content on Rui&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Oct 2015 00:04:29 -0700</lastBuildDate>
    <atom:link href="http://xmruibi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Algorithm Questions Conclusion</title>
      <link>http://xmruibi.github.io/post/conclusion/Algorithm%20Conclusion/</link>
      <pubDate>Sun, 11 Oct 2015 00:04:29 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/post/conclusion/Algorithm%20Conclusion/</guid>
      <description>

&lt;h4 id=&#34;preface:141dddc0e7000fb9b7281baa319a476c&#34;&gt;Preface:&lt;/h4&gt;

&lt;p&gt;This is the collection of interview questions concluded by me, which is including questions from LeetCode, Cracking Code Interview, and Handwriting Coding Handbook.&lt;/p&gt;

&lt;h2 id=&#34;main:141dddc0e7000fb9b7281baa319a476c&#34;&gt;Main:&lt;/h2&gt;

&lt;h3 id=&#34;1-basic-algorithm-part:141dddc0e7000fb9b7281baa319a476c&#34;&gt;1. Basic Algorithm Part:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Linked List Summary:
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71287&#34;&gt;https://www.zybuluo.com/xmruibi/note/71287&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Stack &amp;amp; Queue Summary:
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71283&#34;&gt;https://www.zybuluo.com/xmruibi/note/71283&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Binary Tree Summary:
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/56634&#34;&gt;https://www.zybuluo.com/xmruibi/note/56634&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Mathematical Problem Summary:
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71211&#34;&gt;https://www.zybuluo.com/xmruibi/note/71211&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Big Number Problem Summary:
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71208&#34;&gt;https://www.zybuluo.com/xmruibi/note/71208&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-data-structure:141dddc0e7000fb9b7281baa319a476c&#34;&gt;2. Data Structure:&lt;/h3&gt;

&lt;h4 id=&#34;java-collection-summary:141dddc0e7000fb9b7281baa319a476c&#34;&gt;Java Collection Summary&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Abstract Collection
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71477&#34;&gt;https://www.zybuluo.com/xmruibi/note/71477&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;list:141dddc0e7000fb9b7281baa319a476c&#34;&gt;- List&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;List Interface &amp;amp; Abstract List &amp;amp; Abstract Sequential List
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71582&#34;&gt;https://www.zybuluo.com/xmruibi/note/71582&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ArrayList
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71425&#34;&gt;https://www.zybuluo.com/xmruibi/note/71425&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;set:141dddc0e7000fb9b7281baa319a476c&#34;&gt;- Set&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Set &amp;amp; Abstract Set
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71585&#34;&gt;https://www.zybuluo.com/xmruibi/note/71585&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;map:141dddc0e7000fb9b7281baa319a476c&#34;&gt;- Map&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Map &amp;amp; Abstract Map
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71595&#34;&gt;https://www.zybuluo.com/xmruibi/note/71595&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HashMap
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71622&#34;&gt;https://www.zybuluo.com/xmruibi/note/71622&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;graph:141dddc0e7000fb9b7281baa319a476c&#34;&gt;- Graph&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Undirected Graph&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Directed Graph&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-algorithm-thinking:141dddc0e7000fb9b7281baa319a476c&#34;&gt;3 Algorithm Thinking&lt;/h3&gt;

&lt;h4 id=&#34;sort:141dddc0e7000fb9b7281baa319a476c&#34;&gt;Sort&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Comparsion Sort Problems Summary:
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71280&#34;&gt;https://www.zybuluo.com/xmruibi/note/71280&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Linear Sort Solutions Summary:&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Big Data Sort Solutions Summary:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;search:141dddc0e7000fb9b7281baa319a476c&#34;&gt;Search&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Binary Search Summary:
&lt;a href=&#34;https://www.zybuluo.com/xmruibi/note/71214&#34;&gt;https://www.zybuluo.com/xmruibi/note/71214&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;dfs-and-bfs:141dddc0e7000fb9b7281baa319a476c&#34;&gt;DFS AND BFS&lt;/h4&gt;

&lt;h4 id=&#34;divide-and-conquer:141dddc0e7000fb9b7281baa319a476c&#34;&gt;Divide and Conquer&lt;/h4&gt;

&lt;h4 id=&#34;dynamic-programming:141dddc0e7000fb9b7281baa319a476c&#34;&gt;Dynamic Programming&lt;/h4&gt;

&lt;h3 id=&#34;4-misc:141dddc0e7000fb9b7281baa319a476c&#34;&gt;4 Misc.&lt;/h3&gt;

&lt;h3 id=&#34;5-java-techs:141dddc0e7000fb9b7281baa319a476c&#34;&gt;5 Java Techs&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Distributed MongoDB Configuration</title>
      <link>http://xmruibi.github.io/project/DistributedMongoDB/</link>
      <pubDate>Sat, 10 Oct 2015 22:56:15 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/project/DistributedMongoDB/</guid>
      <description>

&lt;h3 id=&#34;this-project-has-using-distributed-sharded-mongodb-as-data-storage-and-hadoop-map-reduce-as-computing-framework:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;This Project has using Distributed Sharded MongoDB as Data Storage and Hadoop Map Reduce as Computing Framework.&lt;/h3&gt;

&lt;h2 id=&#34;sharded-mongodb-configuration:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;Sharded MongoDB Configuration&lt;/h2&gt;

&lt;p&gt;The following graph is the architecture of how I set three VMs with different port to simulate the real sharding pattern(which need 15 machines actually)&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;media/Sharded%20MongoDB.png&#34; alt=&#34;example&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;The following procedure is how I configured MongoDB on remote three VMs.&lt;/p&gt;

&lt;h3 id=&#34;1-set-up-data-path-config-file-and-log-file-paths-in-each-node-with-mongos-config-shard1-shard2-shard3-directory-name:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;1. Set up data path, config file and log file paths in each node with mongos 、config 、 shard1 、shard2、shard3 (directory name)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /data/mongos/log
sudo chmod -R 777 /data/mongos/log
mkdir -p /data/config/data
sudo chmod -R 777 /data/config/data
mkdir -p /data/config/log
sudo chmod -R 777 /data/config/log
mkdir -p /data/mongos/log
sudo chmod -R 777 /data/mongos/log
mkdir -p /data/shard1/data
sudo chmod -R 777 /data/shard1/data
mkdir -p /data/shard1/log
sudo chmod -R 777 /data/shard1/log
mkdir -p /data/shard2/data
sudo chmod -R 777 /data/shard2/data
mkdir -p /data/shard2/log
sudo chmod -R 777 /data/shard2/log
mkdir -p /data/shard3/data
sudo chmod -R 777 /data/shard3/data
mkdir -p /data/shard3/log
sudo chmod -R 777 /data/shard3/log
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-make-a-plan-of-port-number-and-modify-some-config-parameter-in-mongod-conf:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;2. Make a plan of port number and modify some config parameter in mongod.conf&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mongod --configsvr --dbpath /data/config/data --port 27019 --logpath /data/config/log/config.log --fork


mongos  --configdb 45.55.188.234:27019,45.55.186.238:27019,104.131.106.22:27019  --port 27017   --logpath  /data/mongos/log/mongos.log --fork

## or 
## These codes can migration configuration 

rsync -az /data/configdb mongo-config1.example.net:/data/configdb
rsync -az /data/configdb mongo-config2.example.net:/data/configdb

nano etc/mongod.conf

### This is important!!
set bing_ip = 0.0.0.0; for remote login
set default mongod: 27019 
## !Otherwise your mongos port(27017) will be blocked
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-config-sharding-setting-on-each-vm:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;3. Config sharding setting on each VM&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;### set up shards ports and dbpath and log path
mongod --shardsvr --replSet shard1 --port 22001 --dbpath /data/shard1/data  --logpath /data/shard1/log/shard1.log --fork --journal  --oplogSize 10
mongod --shardsvr --replSet shard2 --port 22002 --dbpath /data/shard2/data  --logpath /data/shard2/log/shard2.log --fork --journal  --oplogSize 10
mongod --shardsvr --replSet shard3 --port 22003 --dbpath /data/shard3/data  --logpath /data/shard3/log/shard3.log --fork --journal  --oplogSize 10


# Shard_1 in Node(45.55.188.234)
mongo  127.0.0.1:22001
use admin
config = { _id:&amp;quot;shard1&amp;quot;, members:[
                     {_id:0,host:&amp;quot;45.55.188.234:22001&amp;quot;},
                     {_id:1,host:&amp;quot;45.55.186.238:22001&amp;quot;},
                {_id:2,host:&amp;quot;104.131.106.22:22001&amp;quot;,arbiterOnly:true}
                ]
         }
rs.initiate(config);

# Shard_2 in Node(45.55.186.238)
mongo  127.0.0.1:22002
use admin
config = { _id:&amp;quot;shard2&amp;quot;, members:[
                     {_id:0,host:&amp;quot;45.55.186.238:22002&amp;quot;},
                     {_id:1,host:&amp;quot;104.131.106.22:22002&amp;quot;},
                {_id:2,host:&amp;quot;45.55.188.234:22002&amp;quot;,arbiterOnly:true}
                ]
         }
rs.initiate(config);

# Shard_3 in Node(104.131.106.22)
mongo  127.0.0.1:22003
use admin
config = { _id:&amp;quot;shard3&amp;quot;, members:[
                     {_id:0,host:&amp;quot;104.131.106.22:22003&amp;quot;},
                     {_id:1,host:&amp;quot;45.55.188.234:22003&amp;quot;},
           {_id:2,host:&amp;quot;45.55.186.238:22003&amp;quot;,arbiterOnly:true}
                ]
         }
rs.initiate(config);
## if you need to reconfig, please use Cmd( rs.reconfig(your_para) )
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-add-shard-config-just-in-one-of-vms:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;4. Add Shard Config just in one of VMs&lt;/h3&gt;

&lt;p&gt;It seems no master mode concept in MongoDB. So just choose one of it. Config Sharding info in mongos; I also made the sharding part on different machines (e.g. Primary Shard1 on Server One, Primary Shard2 on Server Two).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## no specific addr/port 
mongo
use admin

db.runCommand({addshard : &amp;quot;shard1/45.55.188.234:22001,45.55.186.238:22001,104.131.106.22:22001&amp;quot;});

db.runCommand({addshard: &amp;quot;shard2/45.55.186.238:22002,104.131.106.22:22002,45.55.188.234:22002&amp;quot;});

db.runCommand({addshard : &amp;quot;shard3/104.131.106.22:22003,45.55.188.234:22003,45.55.186.238:22003&amp;quot;});

## if you need to reset your previous setting
## 
db.runCommand( { removeShard: &amp;quot;shard1&amp;quot; } )

#Test:
db.runCommand( { enablesharding :&amp;quot;stock&amp;quot;});
db.runCommand( { shardcollection : &amp;quot;stock.quotes&amp;quot;,key : {&amp;quot;_id&amp;quot;: 1} })

for (var i = 1; i &amp;lt;= 100000; i++) db.table1.save({id:i,&amp;quot;test1&amp;quot;:&amp;quot;testval1&amp;quot;});


use admin
db.addUser(&#39;test&#39;,&#39;test&#39;)
db.auth(&#39;test&#39;,&#39;test&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-some-commmands-for-check-database-status:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;5. Some Commmands for check Database Status;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;db.stats();

show databases

db.dropDatabase()

db.printShardingStatus()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-misc:4aa0a68069c32ae3cd96af8e4943a95f&#34;&gt;6. Misc.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;## Sometimes export jar failed
 zip -d stockCrawler.jar META-INF/LICENSE
 jar tvf stockCrawler.jar | grep -i license
 
 ## HDFS manipulation
 
 hadoop fs -ls
 hadoop fs -mkdir /user/${adminName}   
 hadoop fs -touch test
 hdfs dfs -copyFromLocal ${fileName}
 hdfs dfs -cat ${fileName}
 hadoop fs -rmr output
 hadoop jar stockCrawler.jar
 
 ## Some query example:
 db.quotes.find({&#39;historical_quotes.date&#39;:&#39;2015-04-10&#39;})
 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Subarray Sum II</title>
      <link>http://xmruibi.github.io/post/algorithms/SubarraySumII/</link>
      <pubDate>Sat, 10 Oct 2015 21:18:09 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/post/algorithms/SubarraySumII/</guid>
      <description>&lt;p&gt;Given an integer array, find a subarray where the sum of numbers is between two given interval. Your code should return the number of possible answer.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;
public int subarraySumII(int[] A, int start, int end) {
    int res = 0;
        for(int i = 1; i &lt; A.length; i++)
            A[i] += A[i - 1];
        
        Arrays.sort(A);
        for(int i = 0; i &lt; A.length; i++) {
            if(A[i] &gt;= start &amp;&amp; A[i] &lt;= end)
                res++;
            // start &lt;= A[i] - A[j] &lt;= end
            // so the max bound and min bound of A[j] are following:
            int max = A[i] - start;
            int min = A[i] - end;
            // max + 1 make sure the right bound of max value and also index problem
            int range = findInsPos(A, max + 1) - findInsPos(A, min);
            res += range;
        }
        return res;
}
private int findInsPos(int[] A, int value) {
        int l = 0, r = A.length - 1;
        
        while(l &lt; r - 1) {
            int m = l + ((r - l) &gt;&gt;1);
            if(A[m] &lt; value)
                l = m;
            else
                r = m;
        }
        if(A[l] &gt;= value)
            return l;
        else
            return r;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>http://xmruibi.github.io/about/</link>
      <pubDate>Thu, 10 Sep 2015 17:22:36 -0700</pubDate>
      
      <guid>http://xmruibi.github.io/about/</guid>
      <description>

&lt;h2 id=&#34;rui-bi:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Rui Bi&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2015 University of Pittsburgh, Masters of Information Science&lt;/li&gt;
&lt;li&gt;2013 Tianjin Polytechnic University, Bachelor of Computer Science&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;location-california:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Location: California&lt;/h4&gt;

&lt;h4 id=&#34;seeking-for-software-engineer-position:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Seeking for software engineer position&lt;/h4&gt;
</description>
    </item>
    
  </channel>
</rss>